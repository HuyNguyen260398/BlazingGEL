@page "/categories/delete/{categoryId}"

@inject ICategoryRepository CategoryRepo
@inject NavigationManager NavManager
@inject IJSRuntime JsRuntime

<h3>Delete</h3>

<h1>@category.Name</h1>

<button class="btn btn-danger" @onclick="(() => OnDelete(categoryId))">Delete</button>

<button class="btn btn-secondary" @onclick="OnReturn">Back</button>

@code {
    [Parameter]
    public string categoryId { get; set; }

    private CategoryDto category = new();

    protected override async Task OnInitializedAsync()
    {
        category = await CategoryRepo.GetByIdAsync(EndPoint.CategoryEnpoint, Convert.ToInt32(categoryId));
    }

    private async Task OnDelete(string id)
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure?");
        if (confirmed)
        {
            var isSuccess = await CategoryRepo.DeleteAsync(EndPoint.CategoryEnpoint, Convert.ToInt32(categoryId));
            if (isSuccess)
                OnReturn();
        }
    }

    private void OnReturn()
    {
        NavManager.NavigateTo("/categories");
    }
}
